{"version":3,"sources":["components/Header.js","components/SearchBar.js","components/TableHeaders.js","components/EmployeeOrder.js","components/EmployeeList.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","id","SearchBar","props","onSubmit","e","preventDefault","style","width","onChange","handleSearch","name","type","placeholder","TableHeaders","faArrow","order","onClick","handleBtnClick","sortBy","EmployeeOrder","sortOrder","employeeList","sort","a","b","first","last","location","city","phone","email","map","employee","key","src","picture","medium","alt","EmployeeList","state","search","query","employees","event","target","setState","axios","get","console","log","this","data","results","length","filter","toLowerCase","includes","maxWidth","searchList","React","Component","App","useState","setQuery","value","trim","Boolean","window","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb2dfb44.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"mainHeader\">\n      <h1 id=\"header\">Employee Directory</h1>\n      <h2 id=\"headerBody\">\n        Employee Search - Click on column headers to sort.\n      </h2>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction SearchBar(props) {\n  return (\n    <nav\n      className=\"navbar bg-primary d-flex justify-content-center\"\n      onSubmit={(e) => e.preventDefault()}\n    >\n      <form className=\"form-inline position-relative\">\n        <input\n          className=\"form-control\"\n          style={{ width: \"600px\" }}\n          onChange={props.handleSearch}\n          name=\"search\"\n          type=\"search\"\n          placeholder=\"Search Employee\"\n        />\n      </form>\n    </nav>\n  );\n}\n\nexport default SearchBar;\n","import React from \"react\";\n\nfunction TableHeaders(props) {\n  let faArrow =\n    props.order === \"descending\" ? \"fas fa-angle-down\" : \"fas fa-angle-up\";\n  return (\n    <div>\n      <div className=\"row d-flex align-items-center tableHeader\">\n        <div className=\"col-md-1\"></div>\n        <button\n          className=\"btn btn-sm col-md-1 fas fa-sort\"\n          onClick={props.handleBtnClick}\n          name=\"fName\"\n        >\n          First Name <i className={props.sortBy === \"fName\" ? faArrow : \"\"}></i>\n        </button>\n        <button\n          className=\"btn btn-sm col-md-1 fas fa-sort\"\n          onClick={props.handleBtnClick}\n          name=\"lName\"\n        >\n          Last Name <i className={props.sortBy === \"lName\" ? faArrow : \"\"}></i>\n        </button>\n        <button\n          className=\"btn btn-sm col-md-1 fas fa-sort\"\n          onClick={props.handleBtnClick}\n          name=\"city\"\n        >\n          City <i className={props.sortBy === \"city\" ? faArrow : \"\"}></i>\n        </button>\n        <button\n          className=\"btn btn-sm col-md-3 fas fa-sort\"\n          onClick={props.handleBtnClick}\n          name=\"phoneNum\"\n        >\n          Phone <i className={props.sortBy === \"phoneNum\" ? faArrow : \"\"}></i>\n        </button>\n        <button\n          className=\"btn btn-sm col-md-2 fas fa-sort\"\n          onClick={props.handleBtnClick}\n          name=\"email\"\n        >\n          Email <i className={props.sortBy === \"email\" ? faArrow : \"\"}></i>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default TableHeaders;\n","import React from \"react\";\n\nfunction EmployeeOrder(props) {\n  let sortOrder = props.order === \"descending\" ? 1 : -1;\n  let employeeList = props.employeeList;\n  switch (props.sortBy) {\n    case \"fName\":\n      employeeList = employeeList.sort((a, b) =>\n        a.name.first > b.name.first ? sortOrder : -sortOrder\n      );\n      break;\n    case \"lName\":\n      employeeList = employeeList.sort((a, b) =>\n        a.name.last > b.name.last ? sortOrder : -sortOrder\n      );\n      break;\n    case \"city\":\n      employeeList = employeeList.sort((a, b) =>\n        a.location.city > b.location.city ? sortOrder : -sortOrder\n      );\n      break;\n    case \"phoneNum\":\n      employeeList = employeeList.sort((a, b) =>\n        a.phone > b.phone ? sortOrder : -sortOrder\n      );\n      break;\n    case \"email\":\n      employeeList = employeeList.sort((a, b) =>\n        a.email > b.email ? sortOrder : -sortOrder\n      );\n      break;\n    default:\n      break;\n  }\n  return (\n    <div>\n      {employeeList.map((employee) => (\n        <div className=\"row d-flex align-items-center\" key={employee.email}>\n          <div className=\"col-md-1\">\n            <img src={employee.picture.medium} alt=\"Emp Img\" />\n          </div>\n          <div className=\"col-md-1\">{employee.name.first}</div>\n          <div className=\"col-md-1\">{employee.name.last}</div>\n          <div className=\"col-md-2\">{employee.location.city}</div>\n          <div className=\"col-md-2\">{employee.phone}</div>\n          <div className=\"col-md-3\">{employee.email}</div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default EmployeeOrder;\n","import React from \"react\";\nimport axios from \"axios\";\nimport TableHeaders from \"./TableHeaders\";\nimport EmployeeOrder from \"./EmployeeOrder\";\n\nclass EmployeeList extends React.Component {\n  state = {\n    sortBy: \"lName\",\n    order: \"descending\",\n    search: this.props.query,\n    employees: [],\n  };\n\n  async componentDidMount() {\n    try {\n      const employeeList = await axios.get(\n        \"https://randomuser.me/api/?results=50\"\n      );\n      console.log(employeeList);\n      this.setState({ employees: employeeList.data.results });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  static getDerivedStateFromProps(props) {\n    return {\n      search: props.query,\n    };\n  }\n\n  handleBtnClick = (event) => {\n    this.state.sortBy !== event.target.name || this.state.order === \"ascending\"\n      ? this.setState({ order: \"descending\" })\n      : this.setState({ order: \"ascending\" });\n\n    this.setState({ sortBy: event.target.name });\n  };\n\n  searchList() {\n    let employeeList = this.state.employees;\n    if (employeeList.length === 0) {\n      return employeeList;\n    } else if (this.state.search !== \"\") {\n      employeeList = employeeList.filter((employee) => {\n        return (\n          employee.name.first\n            .toLowerCase()\n            .includes(this.state.search.toLowerCase()) ||\n          employee.name.last\n            .toLowerCase()\n            .includes(this.state.search.toLowerCase()) ||\n          employee.location.city\n            .toLowerCase()\n            .includes(this.state.search.toLowerCase()) ||\n          employee.phone.includes(this.state.search) ||\n          employee.email.toLowerCase().includes(this.state.search.toLowerCase())\n        );\n      });\n    }\n    return employeeList;\n  }\n\n  render() {\n    return (\n      <div className=\"container\" style={{ maxWidth: \"1280px\" }}>\n        <TableHeaders\n          handleBtnClick={this.handleBtnClick}\n          sortBy={this.state.sortBy}\n          order={this.state.order}\n        />\n        <EmployeeOrder\n          employeeList={this.searchList()}\n          sortBy={this.state.sortBy}\n          order={this.state.order}\n        />\n      </div>\n    );\n  }\n}\n\nexport default EmployeeList;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport SearchBar from \"./components/SearchBar\";\nimport EmployeeList from \"./components/EmployeeList\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n\n  function handleSearch(event) {\n    event.preventDefault();\n    setQuery(event.target.value.trim());\n  }\n\n  return (\n    <div>\n      <Header />\n      <SearchBar handleSearch={handleSearch} />\n      <EmployeeList query={query} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"./App.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}